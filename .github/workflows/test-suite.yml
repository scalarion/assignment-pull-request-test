name: Test Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test-quality:
    name: Code Quality and Security
    runs-on: ubuntu-latest
    if: false # Skip for now

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          cache: true

      - id: go
        name: Resolve Go version
        run: echo "go_version=$(go version)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4
          args: --timeout=5m

      - name: Create coverage directory
        run: mkdir -p coverage

      - name: Run comprehensive sanity checks
        run: make build check

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  test-cross-platform:
    name: Cross-Platform Testing
    runs-on: ${{ matrix.os }}
    # needs: test-quality
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: Linux
          - os: windows-latest
            platform: Windows
          - os: macos-latest
            platform: macOS

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          cache: true

      - name: Run tests (${{ matrix.platform }})
        run: |
          go mod download
          make test

      - name: Test action with dry-run (${{ matrix.platform }})
        uses: majikmate/assignment-pull-request@main
        with:
          github-token: fake-token
          assignment-regex: >
            ^test/fixtures/assignments/(assignment-[\d]+)$,
            ^test/fixtures/bootcamp/(.+/assignment-[\w\-]+)$,
            ^test/fixtures/courses/(.+/assignment-[\w\-]+)$,
            ^test/fixtures/homework/(hw-[\d]+)$,
            ^test/fixtures/homework/(lab-[\d]+)$,
          default-branch: main
          dry-run: "yes"

  test-repo:
    name: Real Scenario Test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Only run on manual trigger

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Create and clone test fork
        run: |
          # Delete existing fork if it exists
          if gh repo view majikmate/assignment-pull-request-test >/dev/null 2>&1; then
            echo "Deleting existing fork..."
            gh repo delete majikmate/assignment-pull-request-test --yes
          fi

          # Create fresh fork and clone it directly
          echo "Creating fresh fork and cloning..."
          gh repo fork majikmate/assignment-pull-request --repo-name assignment-pull-request-test --clone
          cd assignment-pull-request-test
          git config user.name "GitHub Actions Test"
          git config user.email "actions@github.com"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean and create test workflow in fork
        working-directory: ./assignment-pull-request-test
        run: |
          # Remove entire .github folder for clean slate
          echo "Removing entire .github folder..."
          rm -rf .github

          # Create .github/workflows directory
          mkdir -p .github/workflows

          # Create a test workflow that runs the action on test fixtures
          cat > .github/workflows/test-action.yml << 'EOF'
          name: Test Assignment PR Action

          on:
            workflow_dispatch:
            push:
              branches: [main]

          permissions:
            contents: write
            pull-requests: write

          jobs:
            assignment-pull-request:
              name: Test Real Assignment Processing
              runs-on: ubuntu-latest

              steps:
                - name: Checkout repository
                  uses: actions/checkout@v5

                - name: Run assignment PR creator
                  uses: majikmate/assignment-pull-request@main
                  with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    assignment-regex: >
                      ^test/fixtures/assignments/(assignment-[\d]+)$,
                      ^test/fixtures/homework/(hw-[\d]+)$,
                      ^test/fixtures/labs/(lab-[\d]+)$,
                      ^test/fixtures/bootcamp/(.+/assignment-[\w\-]+)$,
                      ^test/fixtures/courses/(.+/assignment-[\w\-]+)$
                    default-branch: main
                    dry-run: "no"
          EOF

          # Commit and push the changes (removal + new workflow)
          git add .
          git commit -m "Replace .github folder with test workflow"
          git push origin main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger test workflow in fork
        run: |
          # Trigger the workflow we just created
          gh workflow run test-action.yml --repo majikmate/assignment-pull-request-test

          # Wait a moment for the workflow to start
          echo "Waiting for workflow to start..."
          sleep 10

          # Check workflow status
          echo "Checking workflow runs..."
          gh run list --repo majikmate/assignment-pull-request-test --limit 1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify results
        run: |
          echo "🔍 Checking for created branches in test fork..."
          gh api repos/majikmate/assignment-pull-request-test/branches --jq '.[].name' | grep -E "(assignment-|hw-|lab-)" || echo "No assignment branches found yet"

          echo "🔍 Checking for created pull requests..."
          gh pr list --repo majikmate/assignment-pull-request-test

          echo "🔍 Checking recent workflow runs..."
          gh run list --repo majikmate/assignment-pull-request-test --limit 3

          echo "✅ Test fork created and workflow triggered"
          echo "🔗 Check the test repository: https://github.com/majikmate/assignment-pull-request-test"
          echo "🔗 Check workflow runs: https://github.com/majikmate/assignment-pull-request-test/actions"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
