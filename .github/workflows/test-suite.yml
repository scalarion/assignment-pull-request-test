name: Test Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-linux:
    name: Test Go on Linux
    runs-on: ubuntu-latest
    # Note: Tests run only on Linux to avoid platform-specific path issues

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: go mod download

      - name: Run go vet
        run: go vet ./...

      - name: Run tests
        run: go test ./...

      - name: Build binary
        run: go build -o assignment-pr-creator ./cmd/assignment-pr-creator

  test-quality:
    name: Code Quality and Security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: go mod download

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Create coverage directory
        run: mkdir -p coverage

      - name: Run comprehensive sanity checks
        run: make check

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  test-action-dry-run:
    name: Test Action (Dry Run)
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: go mod download

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Create coverage directory
        run: mkdir -p coverage

      - name: Run quick sanity checks
        run: make check-quick

      - name: Build application
        run: make build

      - name: Test dry-run mode
        run: make run
        env:
          GITHUB_TOKEN: "fake-token"
          GITHUB_REPOSITORY: "test/repo"
          ASSIGNMENTS_ROOT_REGEX: "^test/fixtures/(assignments|homework|labs)$"
          ASSIGNMENT_REGEX: '^(assignment|hw|lab)-\d+$'
          DEFAULT_BRANCH: "main"
          DRY_RUN: "true"
