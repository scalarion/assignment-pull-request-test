name: Test Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-cross-platform:
    name: Test Go on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

      - name: Build binary
        run: go build -o assignment-pr-creator ./cmd/assignment-pr-creator

  test-quality:
    name: Code Quality and Security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: go mod download

      - name: Run vet
        run: go vet ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Run tests with coverage
        run: go test -race -coverprofile=coverage.out ./...

      - name: Check test coverage
        run: go tool cover -html=coverage.out -o coverage.html

  test-action-dry-run:
    name: Test Action (Dry Run)
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Build application
        run: make build

      - name: Test dry-run mode
        run: make run
        env:
          ASSIGNMENTS_ROOT_REGEX: "^(assignments|homework|labs)$"
          ASSIGNMENT_REGEX: '^(assignment|hw|lab)-\d+$'
          DEFAULT_BRANCH: "main"
          DRY_RUN: "true"
          GITHUB_TOKEN: "fake-token"
          GITHUB_REPOSITORY: "test/repo"
